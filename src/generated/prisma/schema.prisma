// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seller {
  id              String           @id @default(cuid())
  bussinessName   String?
  phoneNumber     String           @unique
  email           String?          @unique
  subDomain       String?          @unique
  bio             String?
  instagramHandle String?          @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  sellerLocation  SellerLocation[]
  paymentOptions  PaymentOptions?
}

model SellerLocation {
  id           String  @id @default(cuid())
  seller       Seller  @relation(fields: [sellerId], references: [id])
  sellerId     String
  floor        String?
  buildingName String?
  Landmark     String?
  address      String?
  latitude     Float?
  longitude    Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentOptions {
  id                String      @id @default(cuid())
  seller            Seller      @relation(fields: [sellerId], references: [id])
  sellerId          String      @unique
  paymentType       PaymentType
  upiId             String?
  accountHolderName String?
  accountNumber     String?
  ifscCode          String?
  bankName          String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

enum PaymentType {
  UPI
  BANK
}

model Product {
  id          String   @id @default(cuid())
  image       Image[]
  productName String
  price       Float
  quantity    Int
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id        String   @id @default(cuid())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
